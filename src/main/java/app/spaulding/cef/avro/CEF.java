/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package app.spaulding.cef.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CEF extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2237815143317730980L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CEF\",\"namespace\":\"app.spaulding.cef.avro\",\"fields\":[{\"name\":\"severity\",\"type\":\"string\"},{\"name\":\"deviceVendor\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"deviceProduct\",\"type\":\"string\"},{\"name\":\"deviceVersion\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"deviceEventClassId\",\"type\":\"string\"},{\"name\":\"extension\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CEF> ENCODER =
      new BinaryMessageEncoder<CEF>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CEF> DECODER =
      new BinaryMessageDecoder<CEF>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CEF> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CEF> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CEF>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CEF to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CEF from a ByteBuffer. */
  public static CEF fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence severity;
  @Deprecated public java.lang.CharSequence deviceVendor;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence deviceProduct;
  @Deprecated public java.lang.CharSequence deviceVersion;
  @Deprecated public int version;
  @Deprecated public java.lang.CharSequence deviceEventClassId;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> extension;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CEF() {}

  /**
   * All-args constructor.
   * @param severity The new value for severity
   * @param deviceVendor The new value for deviceVendor
   * @param name The new value for name
   * @param deviceProduct The new value for deviceProduct
   * @param deviceVersion The new value for deviceVersion
   * @param version The new value for version
   * @param deviceEventClassId The new value for deviceEventClassId
   * @param extension The new value for extension
   */
  public CEF(java.lang.CharSequence severity, java.lang.CharSequence deviceVendor, java.lang.CharSequence name, java.lang.CharSequence deviceProduct, java.lang.CharSequence deviceVersion, java.lang.Integer version, java.lang.CharSequence deviceEventClassId, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> extension) {
    this.severity = severity;
    this.deviceVendor = deviceVendor;
    this.name = name;
    this.deviceProduct = deviceProduct;
    this.deviceVersion = deviceVersion;
    this.version = version;
    this.deviceEventClassId = deviceEventClassId;
    this.extension = extension;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return severity;
    case 1: return deviceVendor;
    case 2: return name;
    case 3: return deviceProduct;
    case 4: return deviceVersion;
    case 5: return version;
    case 6: return deviceEventClassId;
    case 7: return extension;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: severity = (java.lang.CharSequence)value$; break;
    case 1: deviceVendor = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: deviceProduct = (java.lang.CharSequence)value$; break;
    case 4: deviceVersion = (java.lang.CharSequence)value$; break;
    case 5: version = (java.lang.Integer)value$; break;
    case 6: deviceEventClassId = (java.lang.CharSequence)value$; break;
    case 7: extension = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'severity' field.
   * @return The value of the 'severity' field.
   */
  public java.lang.CharSequence getSeverity() {
    return severity;
  }

  /**
   * Sets the value of the 'severity' field.
   * @param value the value to set.
   */
  public void setSeverity(java.lang.CharSequence value) {
    this.severity = value;
  }

  /**
   * Gets the value of the 'deviceVendor' field.
   * @return The value of the 'deviceVendor' field.
   */
  public java.lang.CharSequence getDeviceVendor() {
    return deviceVendor;
  }

  /**
   * Sets the value of the 'deviceVendor' field.
   * @param value the value to set.
   */
  public void setDeviceVendor(java.lang.CharSequence value) {
    this.deviceVendor = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'deviceProduct' field.
   * @return The value of the 'deviceProduct' field.
   */
  public java.lang.CharSequence getDeviceProduct() {
    return deviceProduct;
  }

  /**
   * Sets the value of the 'deviceProduct' field.
   * @param value the value to set.
   */
  public void setDeviceProduct(java.lang.CharSequence value) {
    this.deviceProduct = value;
  }

  /**
   * Gets the value of the 'deviceVersion' field.
   * @return The value of the 'deviceVersion' field.
   */
  public java.lang.CharSequence getDeviceVersion() {
    return deviceVersion;
  }

  /**
   * Sets the value of the 'deviceVersion' field.
   * @param value the value to set.
   */
  public void setDeviceVersion(java.lang.CharSequence value) {
    this.deviceVersion = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'deviceEventClassId' field.
   * @return The value of the 'deviceEventClassId' field.
   */
  public java.lang.CharSequence getDeviceEventClassId() {
    return deviceEventClassId;
  }

  /**
   * Sets the value of the 'deviceEventClassId' field.
   * @param value the value to set.
   */
  public void setDeviceEventClassId(java.lang.CharSequence value) {
    this.deviceEventClassId = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getExtension() {
    return extension;
  }

  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.extension = value;
  }

  /**
   * Creates a new CEF RecordBuilder.
   * @return A new CEF RecordBuilder
   */
  public static app.spaulding.cef.avro.CEF.Builder newBuilder() {
    return new app.spaulding.cef.avro.CEF.Builder();
  }

  /**
   * Creates a new CEF RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CEF RecordBuilder
   */
  public static app.spaulding.cef.avro.CEF.Builder newBuilder(app.spaulding.cef.avro.CEF.Builder other) {
    return new app.spaulding.cef.avro.CEF.Builder(other);
  }

  /**
   * Creates a new CEF RecordBuilder by copying an existing CEF instance.
   * @param other The existing instance to copy.
   * @return A new CEF RecordBuilder
   */
  public static app.spaulding.cef.avro.CEF.Builder newBuilder(app.spaulding.cef.avro.CEF other) {
    return new app.spaulding.cef.avro.CEF.Builder(other);
  }

  /**
   * RecordBuilder for CEF instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CEF>
    implements org.apache.avro.data.RecordBuilder<CEF> {

    private java.lang.CharSequence severity;
    private java.lang.CharSequence deviceVendor;
    private java.lang.CharSequence name;
    private java.lang.CharSequence deviceProduct;
    private java.lang.CharSequence deviceVersion;
    private int version;
    private java.lang.CharSequence deviceEventClassId;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> extension;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(app.spaulding.cef.avro.CEF.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.severity)) {
        this.severity = data().deepCopy(fields()[0].schema(), other.severity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceVendor)) {
        this.deviceVendor = data().deepCopy(fields()[1].schema(), other.deviceVendor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deviceProduct)) {
        this.deviceProduct = data().deepCopy(fields()[3].schema(), other.deviceProduct);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deviceVersion)) {
        this.deviceVersion = data().deepCopy(fields()[4].schema(), other.deviceVersion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deviceEventClassId)) {
        this.deviceEventClassId = data().deepCopy(fields()[6].schema(), other.deviceEventClassId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.extension)) {
        this.extension = data().deepCopy(fields()[7].schema(), other.extension);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CEF instance
     * @param other The existing instance to copy.
     */
    private Builder(app.spaulding.cef.avro.CEF other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.severity)) {
        this.severity = data().deepCopy(fields()[0].schema(), other.severity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceVendor)) {
        this.deviceVendor = data().deepCopy(fields()[1].schema(), other.deviceVendor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deviceProduct)) {
        this.deviceProduct = data().deepCopy(fields()[3].schema(), other.deviceProduct);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deviceVersion)) {
        this.deviceVersion = data().deepCopy(fields()[4].schema(), other.deviceVersion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.deviceEventClassId)) {
        this.deviceEventClassId = data().deepCopy(fields()[6].schema(), other.deviceEventClassId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.extension)) {
        this.extension = data().deepCopy(fields()[7].schema(), other.extension);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'severity' field.
      * @return The value.
      */
    public java.lang.CharSequence getSeverity() {
      return severity;
    }

    /**
      * Sets the value of the 'severity' field.
      * @param value The value of 'severity'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setSeverity(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.severity = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'severity' field has been set.
      * @return True if the 'severity' field has been set, false otherwise.
      */
    public boolean hasSeverity() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'severity' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearSeverity() {
      severity = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceVendor' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeviceVendor() {
      return deviceVendor;
    }

    /**
      * Sets the value of the 'deviceVendor' field.
      * @param value The value of 'deviceVendor'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setDeviceVendor(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.deviceVendor = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceVendor' field has been set.
      * @return True if the 'deviceVendor' field has been set, false otherwise.
      */
    public boolean hasDeviceVendor() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deviceVendor' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearDeviceVendor() {
      deviceVendor = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceProduct' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeviceProduct() {
      return deviceProduct;
    }

    /**
      * Sets the value of the 'deviceProduct' field.
      * @param value The value of 'deviceProduct'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setDeviceProduct(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.deviceProduct = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceProduct' field has been set.
      * @return True if the 'deviceProduct' field has been set, false otherwise.
      */
    public boolean hasDeviceProduct() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deviceProduct' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearDeviceProduct() {
      deviceProduct = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceVersion' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeviceVersion() {
      return deviceVersion;
    }

    /**
      * Sets the value of the 'deviceVersion' field.
      * @param value The value of 'deviceVersion'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setDeviceVersion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.deviceVersion = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceVersion' field has been set.
      * @return True if the 'deviceVersion' field has been set, false otherwise.
      */
    public boolean hasDeviceVersion() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'deviceVersion' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearDeviceVersion() {
      deviceVersion = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setVersion(int value) {
      validate(fields()[5], value);
      this.version = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearVersion() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceEventClassId' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeviceEventClassId() {
      return deviceEventClassId;
    }

    /**
      * Sets the value of the 'deviceEventClassId' field.
      * @param value The value of 'deviceEventClassId'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setDeviceEventClassId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.deviceEventClassId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceEventClassId' field has been set.
      * @return True if the 'deviceEventClassId' field has been set, false otherwise.
      */
    public boolean hasDeviceEventClassId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'deviceEventClassId' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearDeviceEventClassId() {
      deviceEventClassId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getExtension() {
      return extension;
    }

    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder setExtension(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.extension = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public app.spaulding.cef.avro.CEF.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CEF build() {
      try {
        CEF record = new CEF();
        record.severity = fieldSetFlags()[0] ? this.severity : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.deviceVendor = fieldSetFlags()[1] ? this.deviceVendor : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.deviceProduct = fieldSetFlags()[3] ? this.deviceProduct : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.deviceVersion = fieldSetFlags()[4] ? this.deviceVersion : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.version = fieldSetFlags()[5] ? this.version : (java.lang.Integer) defaultValue(fields()[5]);
        record.deviceEventClassId = fieldSetFlags()[6] ? this.deviceEventClassId : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.extension = fieldSetFlags()[7] ? this.extension : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[7]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CEF>
    WRITER$ = (org.apache.avro.io.DatumWriter<CEF>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CEF>
    READER$ = (org.apache.avro.io.DatumReader<CEF>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
